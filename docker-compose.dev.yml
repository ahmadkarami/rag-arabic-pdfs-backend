version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: dev_postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: mydb
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data

  hasura:
    image: hasura/graphql-engine:v2.26.0
    restart: unless-stopped
    hostname: hasura
    container_name: hasura
    env_file:
      - .env
    ports:
      - "${HASURA_PORT}:8080"
    environment:
      HASURA_INSERT_USER_SECRET: ${HASURA_INSERT_USER_SECRET}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: guest
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      HASURA_GRAPHQL_JWT_SECRET: '{ "type": "${JWT_KEY_ALGO}", "key": "${JWT_PRIVATE_KEY}", "claims_namespace": "${HASURA_CLAIMS_NAMESPACE}" }'
      HASURA_ACTION_BASE_URL: ${HASURA_ACTION_BASE_URL}
      HASURA_CRON_BASE_URL: ${HASURA_CRON_BASE_URL}
      HASURA_TRIGGER_BASE_URL: ${HASURA_TRIGGER_BASE_URL}
      HEADER_SECRET: ${HEADER_AUTH_SECRET}
    depends_on:
      - postgres
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  postgres_data_dev: